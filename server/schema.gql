# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Create new set data"""
input CreateSetInput {
  exerciseName: String!
  warmUp: Boolean!
  weight: Float!
  systemOfMeasurement: String!
  reps: Int!
  rpe: Float!
  userId: ID!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Exercise {
  id: ID!
  exerciseName: String!
  targetMuscles: String!
}

type Mutation {
  createExercise(targetMuscles: String!, exerciseName: String!): Exercise!
  deleteExercise(exerciseName: String!): Boolean!
  updateExercise(newTargetMuscles: String!, newExerciseName: String!, exerciseName: String!): Boolean!
  createSet(newSetData: CreateSetInput!): Set!
  deleteSet(id: String!): Boolean!
  updateSet(updateSetData: UpdateSetInput!): Boolean!
  registerUser(userRegistrationInfo: UserRegistrationInfo!): User!
  loginUser(userLoginInfo: UserLoginInfo!): User
}

type Query {
  exercise: [Exercise!]!
  set: [Set!]!
  user: [User!]!
  me: User
}

type Set {
  id: ID!

  """Name of the exercise of which the set was performed"""
  exerciseName: String!

  """Whether the set was a working set or a warmup set"""
  warmUp: Boolean!

  """Recorded mass of the resistance for each rep in the set"""
  weight: Float!

  """Whether the resistance was measured in kilos or pounds"""
  systemOfMeasurement: String!

  """Number of reps performed in the set"""
  reps: Float!

  """
  A 5-10 score denoting how many reps were 'left in the tank' for the performer.
  A score of 5 represents that the performer of the set could have done at least
  5 more reps. A score of 6 represents 4 reps, etc. A score of 10 denotes that
  the performer could do no more reps. A score of 10+ can be used to show the
  performer failed on the last rep, who's count should then be recorded in the reps field.
  """
  rpe: Float!

  """Date set was performed"""
  date: DateTime!

  """
  A number denoting the chronological order in which the sets were performed. Resets each day
  """
  order: Float
  user: User!
}

"""Update set data"""
input UpdateSetInput {
  id: String!
  warmUp: Boolean
  weight: Float
  systemOfMeasurement: String
  reps: Int
  rpe: Float
  order: Int
}

"""The user model"""
type User {
  id: ID!

  """The name of the user"""
  username: String!

  """The email address used for account operations"""
  email: String!

  """List containing all of the user's recorded exercise sets"""
  sets: [Set!]
}

input UserLoginInfo {
  email: String!
  password: String!
}

input UserRegistrationInfo {
  username: String!
  email: String!
  password: String!
}
